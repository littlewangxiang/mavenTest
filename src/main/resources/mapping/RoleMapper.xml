<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.im.model.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.demo.im.entity.Role" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="roleCode" property="rolecode" jdbcType="VARCHAR" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
<!--     <result column="rg_id" property="rgId" jdbcType="INTEGER" /> -->
	<association property="rgId" javaType="com.demo.im.entity.RoleGroup" column="rg_id">
		<id column="u_id" property="uId" jdbcType="INTEGER" />
	    <result column="rg_name" property="rgName" jdbcType="VARCHAR" />
	    <result column="type" property="type" jdbcType="VARCHAR" />
	</association>
  </resultMap>
  <sql id="Base_Column_List" >
    r.role_id,
    r.roleCode, r.roleName, 
    r.type, 
    r.rg_id,
    rg.u_id, 
    rg.rg_name, 
    rg.type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_role r ,t_role_group rg
    where r.rg_id = rg.u_id and r.role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <select id="selectAllRoleByParam" parameterType="com.demo.im.entity.Role" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from t_role r ,t_role_group rg
  	where "1=1"
  		<if test="roleId != null" >
        and role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="rolecode != null" >
        and rolecode = #{rolecode,jdbcType=VARCHAR}
      </if>
      <if test="rolename != null" >
        and rolename = #{rolename,jdbcType=VARCHAR}
      </if>
      <if test="type != null" >
        and type = #{type,jdbcType=VARCHAR}
      </if>
      <if test="rgId != null" >
        and rg_id = #{rgId,jdbcType=INTEGER}
      </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.demo.im.entity.Role" >
    insert into t_role (role_id, roleCode, roleName, 
      type, rg_id)
    values (#{roleId,jdbcType=INTEGER}, #{rolecode,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{rgId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.im.entity.Role" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="rolecode != null" >
        roleCode,
      </if>
      <if test="rolename != null" >
        roleName,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="rgId != null" >
        rg_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="rolecode != null" >
        #{rolecode,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="rgId != null" >
        #{rgId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.im.entity.Role" >
    update t_role
    <set >
      <if test="rolecode != null" >
        roleCode = #{rolecode,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="rgId != null" >
        rg_id = #{rgId,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.im.entity.Role" >
    update t_role
    set roleCode = #{rolecode,jdbcType=VARCHAR},
      roleName = #{rolename,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      rg_id = #{rgId,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>